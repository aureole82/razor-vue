@using RazorVue.Data.Models
<script type="text/html" id="segment-edit-template">
    <h3>Edit</h3>
    <form id="editSegment" v-on:submit.prevent="editSegment">
        <div class="form-group">
            <label class="control-label" for="Segment_Start">Start</label>
            <input v-model="segment.start" class="form-control" type="text" data-val="true" data-val-required="The Start field is required." id="Segment_Start" name="Segment.Start">
            <span class="text-danger field-validation-valid" data-valmsg-for="Segment.Start" data-valmsg-replace="true"></span>
        </div>
        <div class="form-group">
            <label class="control-label" for="Segment_Length">Length</label>
            <input v-model="segment.length" class="form-control" type="number" data-val="true" data-val-required="The Length field is required." id="Segment_Length" name="Segment.Length">
            <span class="text-danger field-validation-valid" data-valmsg-for="Segment.Length" data-valmsg-replace="true"></span>
        </div>
        <div class="form-group">
            <label class="control-label" for="Segment_Type">Type</label>
            <select class="form-control" data-val="true" data-val-required="The Type field is required." id="Segment_Type" name="Segment.Type"
                    v-model="segment.type" v-on:change="editSegment()"
                    asp-items="Html.GetEnumSelectList<SegmentType>()">
            </select>
            <span class="text-danger field-validation-valid" data-valmsg-for="Segment.Type" data-valmsg-replace="true"></span>
        </div>
        <div class="form-group">
            <label class="control-label" for="Segment_Description">Description</label>
            <textarea v-model="segment.description" class="form-control" type="text" data-val="true" data-val-required="The Description field is required." id="Segment_Description" name="Segment.Description"></textarea>
            <span class="text-danger field-validation-valid" data-valmsg-for="Segment.Description" data-valmsg-replace="true"></span>
        </div>
        <div class="form-group">
            <label class="control-label" for="Segment_Origin">Origin</label>
            <textarea v-model="segment.origin" class="form-control" type="text" id="Segment_Origin" name="Segment.Origin"></textarea>
        </div>
        <div class="form-group">
            <label class="control-label" for="Segment_OriginBroadcastDay">Origin broadcast at</label>
            <input v-model="segment.originBroadcastDay" class="form-control" type="date" id="Segment_OriginBroadcastDay" name="Segment.OriginBroadcastDay"></input>
        </div>
        <div class="form-group">
            <label class="control-label" for="Segment_OriginDescription">Origin description</label>
            <input v-model="segment.originDescription" class="form-control" type="text" id="Segment_OriginDescription" name="Segment.OriginDescription"></input>
        </div>
        <div class="form-group">
            <label class="control-label" for="Segment_Rights">Rights</label>
            <textarea v-model="segment.rights" class="form-control" type="text" id="Segment_Rights" name="Segment.Rights"></textarea>
            <span class="text-danger field-validation-valid" data-valmsg-for="Segment.Rights" data-valmsg-replace="true"></span>
        </div>
        <div class="form-group">
            <label class="control-label" for="Segment_MaterialId">Material</label>
            <select class="form-control" id="Segment_MaterialId" name="Segment.MaterialId"
                    v-model="segment.materialId" v-on:change="editSegment()"
                    asp-items="ViewBag.Materials">
                <option value="">(none)</option>
            </select>
        </div>
        <div class="form-group">
            <button type="submit" class="btn btn-primary d-none">
                <i class="fa-solid fa-floppy-disk"></i> Save
            </button>
        </div>
    </form>

</script>
<script type="text/javascript">

    const SegmentEdit = {
        template: "#segment-edit-template",
        props: ['segment'],
        data() {
            return {};
        },
        watch: {
            segment() {
                this.segment.materialId = `${this.segment.materialId}`;
                console.log("_SegmentEdit.watch#segment", this.segment);
            }
        },
        methods: {
            editSegment() {
                this.$emit(
                    "segmentEdited",
                    {
                        ...this.segment,
                        type: +this.segment.type,
                        materialId: this.segment.materialId ? this.segment.materialId : null
                    }
                );
            }
        }
    };
</script>