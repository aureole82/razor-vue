<script type="text/x-template" id="segment-edit-template">
    <h3>Edit</h3>
    <form id="editSegment" v-on:submit.prevent="editSegment">
            <div class="form-group">
                <label class="control-label" for="Segment_Start">Start</label>
                <input v-model="segment.start" class="form-control" type="text" data-val="true" data-val-required="The Start field is required." id="Segment_Start" name="Segment.Start">
                <span class="text-danger field-validation-valid" data-valmsg-for="Segment.Start" data-valmsg-replace="true"></span>
            </div>
            <div class="form-group">
                <label class="control-label" for="Segment_Length">Length</label>
                <input v-model="segment.length" class="form-control" type="number" data-val="true" data-val-required="The Length field is required." id="Segment_Length" name="Segment.Length">
                <span class="text-danger field-validation-valid" data-valmsg-for="Segment.Length" data-valmsg-replace="true"></span>
            </div>
            <div class="form-group">
                <label class="control-label" for="Segment_Description">Description</label>
                <input v-model="segment.description" class="form-control" type="text" data-val="true" data-val-required="The Description field is required." id="Segment_Description" name="Segment.Description">
                <span class="text-danger field-validation-valid" data-valmsg-for="Segment.Description" data-valmsg-replace="true"></span>
            </div>
            <div class="form-group">
                <label class="control-label" for="Segment_Type">Type</label>
                <select v-model="segment.type" class="form-control" data-val="true" data-val-required="The Type field is required." id="Segment_Type" name="Segment.Type">
                    <option value="0">New</option>
                    <option value="1">Archive</option>
                    <option value="2">Raw</option>
                    <option value="3">Image</option>
                    <option value="4">Music</option>
                    <option value="5">Video</option>
                </select>
                <span class="text-danger field-validation-valid" data-valmsg-for="Segment.Type" data-valmsg-replace="true"></span>
            </div>
            <div class="form-group">
                <label class="control-label" for="Segment_Rights">Rights</label>
                <input v-model="segment.rights" class="form-control" type="text" id="Segment_Rights" name="Segment.Rights">
                <span class="text-danger field-validation-valid" data-valmsg-for="Segment.Rights" data-valmsg-replace="true"></span>
            </div>
            <div class="form-group">
                <label class="control-label" for="Segment_MaterialId">MaterialId</label>
                <select v-model="segment.materialId" class="form-control" id="Segment_MaterialId" name="Segment.MaterialId"><option value="1">First steps of Mountain Mike</option>
                    <option value="2">Mountain Mike is hiking</option>
                    <option value="3">Hiking is a new movement</option>
                    <option value="4">Mountain Mike takes a rest</option>
                    <option value="5">Local mountain tours for intermediates</option>
                    <option value="7">Say goodbye to Mountain Mike</option>
                </select>
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-primary" :disabled="!isValid()">
                    <i class="fa-solid fa-floppy-disk"></i> Save
                </button>
            </div>
        </form>

</script>
<script type="text/javascript">

    const SegmentEdit = {
        template: "#segment-edit-template",
        props: ['segment'],
        data() {
            return {};
        },
        methods: {
            editSegment() {
                this.$emit(
                    "segmentEdited",
                    {
                        start: this.segment.start,
                        length: this.segment.length,
                        description: this.segment.description,
                        rights: this.segment.rights,
                        type: this.segment.type,
                        materialId: this.segment.materialId
                    }
                );
            },
            isValid() {
                return validateForm2();
            }
        },
        mounted() {
            validateForm2 = function() {
                return $("form#editSegment").valid();
            };
        }
    };
    let validateForm2 = function() { return false; };
</script>