@page
@using System.Text.Json
@model IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<div id="app">
<table class="table">
    <thead>
        <tr>
            <th>Start</th>
            <th>Length (in seconds)</th>
            <th>Description</th>
            <th>Type</th>
            <th>Rights</th>
            <th>Material</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
            <tr v-for="segment in segments" :key="segment.id">
                <td>{{segment.Start}}</td>
                <td>{{segment.Length}}</td>
                <td>{{segment.Description}}</td>
                <td>{{segment.Type}}</td>
                <td>{{segment.Rights}}</td>
                <td>{{segment.Material?.Description}}</td>
                <td>
                    <a>Edit</a> |
                    <a>Details</a> |
                    <a>Delete</a>
                </td>
            </tr>
    </tbody>
</table></div>

@section Scripts
    {
    <environment names="Development">
        <script type="text/javascript" src="~/lib/vue/dist/vue.global.js"></script>
    </environment>
    <environment names="Production">
        <script type="text/javascript" src="~/lib/vue/dist/vue.global.prod.js"></script>
    </environment>

    <script type="text/javascript">
        const { createApp } = Vue;


        const app = createApp({
            data() {

                return {
                    message: 'Hello World from Vue.js!',
                    segments: @Html.Raw(JsonSerializer.Serialize(Model.Segments))

                }

            }

        });

        app.mount('#app');
    </script>
}
