<script type="text/html" id="segment-list-item-template">
    <tr :class="{'fw-bold':isSelected}">
        <td :height="minHeight" style="cursor: pointer;" v-on:click="selectSegment()">{{segment.start}}</td>
        <td>{{segment.length}}</td>
        <td>{{segment.description}}</td>
        <td>{{getSegmentTypeLabel(segment.type)}}</td>
        <td>{{segment.rights}}</td>
        <td>{{segment.material?.description}}</td>
        <td>
            <button class="btn btn-danger" v-on:click.prevent="deleteSegment()" aria-label="Delete segment">
                <i class="fa-solid fa-trash"></i>
            </button>
        </td>
    </tr>
</script>
<script type="text/javascript">
    const SegmentListItem = {
        template: "#segment-list-item-template",
        props: ['segment', 'isSelected'],
        computed: {
            minHeight() {
                return Math.min(150, Math.max(50, this.segment.length * 5));
            }
        },
        data() {
            return {};
        },
        methods: {
            selectSegment() {
                this.$emit("segmentSelected", this.segment.id);
            },
            deleteSegment() {
                this.$emit("segmentDeleted", this.segment.id);
            },
            getSegmentTypeLabel(value) {
                switch (value) {
                case 0:
                    return "New";
                case 1:
                    return "Archive";
                case 2:
                    return "Raw";
                case 3:
                    return "Image";
                case 4:
                    return "Music";
                case 5:
                    return "Video";
                default:
                    return "Unknown";
                }
            }
        }
    };
</script>