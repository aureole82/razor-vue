<script type="text/html" id="segment-list-item-template">
    <li class="list-group-item" :class="{'active':isSelected}" style="cursor: pointer;" :style="{'min-height':minHeight + 'px'}" v-on:click="selectSegment()">
        <div class="row">
            <div class="col-auto">{{segment.start}}<br/>{{segment.length}}s</div>
            <div class="col text-truncate">
                <div class="fw-bold text-truncate"><i class="fa-solid" :class="getSegmentTypeIcon(segment.type)" :title="getSegmentTypeLabel(segment.type)"></i> {{segment.description}}</div>
                <div v-if="segment.rights" class="text-truncate">&copy; {{segment.rights}}</div>
                <div v-if="segment.materialDescription" class="badge bg-dark d-block text-truncate">{{segment.materialDescription}}</div>
            </div>
        </div>
    </li>
</script>
<script type="text/javascript">
    const SegmentListItem = {
        template: "#segment-list-item-template",
        props: ['segment', 'isSelected'],
        computed: {
            minHeight() {
                return Math.min(150, Math.max(50, this.segment.length * 5));
            }
        },
        data() {
            return {};
        },
        methods: {
            selectSegment() {
                this.$emit("segmentSelected", this.segment.id);
            },
            getSegmentTypeIcon(value) {
                switch (value) {
                case 0:
                    return "fa-video";
                case 1:
                    return "fa-recycle";
                case 2:
                    return "fa-xmarks-lines";
                case 3:
                    return "fa-image";
                case 4:
                    return "fa-music";
                case 5:
                    return "fa-youtube";
                default:
                    return "fa-circle-question";
                }
            },
            getSegmentTypeLabel(value) {
                switch (value) {
                case 0:
                    return "New";
                case 1:
                    return "Archive";
                case 2:
                    return "Raw";
                case 3:
                    return "Image";
                case 4:
                    return "Music";
                case 5:
                    return "Video";
                default:
                    return "Unknown";
                }
            }
        }
    };
</script>