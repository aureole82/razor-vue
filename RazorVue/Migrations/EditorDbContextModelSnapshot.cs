// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RazorVue.Data;

#nullable disable

namespace RazorVue.Migrations
{
    [DbContext(typeof(EditorDbContext))]
    partial class EditorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RazorVue.Data.Models.EditDecisionList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Lists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Start = new DateTime(2022, 7, 1, 19, 14, 23, 0, DateTimeKind.Unspecified),
                            Title = "Mountain Mike"
                        });
                });

            modelBuilder.Entity("RazorVue.Data.Models.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginatingSystem")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Materials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "First steps of Mountain Mike",
                            ExternalReference = "4/100512274",
                            OriginatingSystem = "Archive"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Mountain Mike is hiking",
                            ExternalReference = "4/101426827",
                            OriginatingSystem = "Archive"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Hiking is a new movement",
                            ExternalReference = "4/101526914; 510/12/000.434.997",
                            OriginatingSystem = "Archive;PreEditor"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Mountain Mike takes a rest",
                            ExternalReference = "4/101427138",
                            OriginatingSystem = "Archive"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Local mountain tours for intermediates",
                            ExternalReference = "4/101536989; 510/12/000.434.998",
                            OriginatingSystem = "Archive;PreEditor"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Say goodbye to Mountain Mike",
                            ExternalReference = "4/101429299",
                            OriginatingSystem = "Archive"
                        });
                });

            modelBuilder.Entity("RazorVue.Data.Models.Segment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<int>("ListId")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialId")
                        .HasColumnType("int");

                    b.Property<string>("Rights")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("Start")
                        .HasColumnType("time");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ListId");

                    b.HasIndex("MaterialId");

                    b.ToTable("Segments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Mountain Mike tells about the beginning",
                            Length = 12,
                            ListId = 1,
                            MaterialId = 1,
                            Rights = "w/o",
                            Start = new TimeSpan(0, 0, 0, 0, 0),
                            Type = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Mountain Mike tells about the beginning",
                            Length = 24,
                            ListId = 1,
                            MaterialId = 2,
                            Rights = "w/o",
                            Start = new TimeSpan(0, 0, 0, 12, 0),
                            Type = 0
                        },
                        new
                        {
                            Id = 3,
                            Description = "Everybody loves hiking",
                            Length = 18,
                            ListId = 1,
                            MaterialId = 3,
                            Rights = "Property of the content group, usage allowed",
                            Start = new TimeSpan(0, 0, 0, 36, 0),
                            Type = 1
                        },
                        new
                        {
                            Id = 4,
                            Description = "Take a break, Mike",
                            Length = 6,
                            ListId = 1,
                            MaterialId = 4,
                            Rights = "w/o",
                            Start = new TimeSpan(0, 0, 0, 54, 0),
                            Type = 0
                        },
                        new
                        {
                            Id = 5,
                            Description = "Local mountain tours",
                            Length = 18,
                            ListId = 1,
                            MaterialId = 5,
                            Rights = "Property of the local hiking club, usage allowed",
                            Start = new TimeSpan(0, 0, 1, 0, 0),
                            Type = 1
                        },
                        new
                        {
                            Id = 6,
                            Description = "Map of local mountain tours",
                            Length = 12,
                            ListId = 1,
                            Rights = "Property of the local hiking club, usage allowed only for current broadcast",
                            Start = new TimeSpan(0, 0, 1, 3, 0),
                            Type = 3
                        },
                        new
                        {
                            Id = 7,
                            Description = "Time to say goodbye",
                            Length = 6,
                            ListId = 1,
                            MaterialId = 7,
                            Rights = "w/o",
                            Start = new TimeSpan(0, 0, 1, 18, 0),
                            Type = 0
                        });
                });

            modelBuilder.Entity("RazorVue.Data.Models.Segment", b =>
                {
                    b.HasOne("RazorVue.Data.Models.EditDecisionList", "List")
                        .WithMany("Segments")
                        .HasForeignKey("ListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RazorVue.Data.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId");

                    b.Navigation("List");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("RazorVue.Data.Models.EditDecisionList", b =>
                {
                    b.Navigation("Segments");
                });
#pragma warning restore 612, 618
        }
    }
}
